#!/usr/bin/env python


"""Quick look for VDIF

Usage: vdif-qlook [-f <PATH>] [--integ <T>] [--delay <T>] [--interval <T>] [--chbin <N>] [--cal <T>]

-f <PATH>       Input VDIF file.
--integ <T>     Integration time in seconds [default: 1.0].
--delay <T>     Time delay for plot in seconds [default: 0.0].
--interval <T>  Plot interval time in seconds [default: 1.0].
--chbin <N>     Number of channels to bin [default: 1].
--cal <T>       Calibration time in seconds [default: 0.0].
-h --help       Show this screen and exit.
--version       Show version and exit.

"""


__author__ = "Masato Hagimoto"
__version__ = "0.1.0"


# standard library
import time
from pathlib import Path


# dependencies
import numpy as np
import matplotlib.pyplot as plt
from docopt import docopt
from vdif_reader import get_spectrum, get_cal_spectrum


# main functions
def main() -> None:
    args = docopt(__doc__, version=__version__)

    path = Path(args["-f"]).resolve()
    integ = float(args["--integ"])
    delay = float(args["--delay"])
    interval = float(args["--interval"])
    chbin = int(args["--chbin"])
    cal = float(args["--cal"])

    fig, axes = plt.subplots(2, 1)

    if cal == 0.0:
        spectrum_cal = 1 + 0j
    else:
        spectrum_cal = get_cal_spectrum(path, cal, delay, chbin)

    while True:
        start = time.time()
        spectrum = get_spectrum(path, integ, delay, chbin)
        spectrum /= spectrum_cal
        end = time.time()

        ax0 = axes[0]
        (line,) = ax0.plot(np.angle(spectrum), marker=".", ms=1, lw=0)

        ax1 = axes[1]
        (amp,) = ax1.plot(np.abs(spectrum))

        plt.pause(interval - (end - start))
        line.remove()
        amp.remove()


# run command line interface
if __name__ == "__main__":
    main()
